pool:
  vmImage: 'ubuntu-16.04'
  
strategy:
    matrix:
        netcoreapp2_1:
            framework: $(framework)
        netcoreapp3_1:
            framework: netcoreapp3.1
        maxParallel: 2

steps:

- task: UseDotNet@2
  displayName: install dotnet core 2.1
  inputs:
    version: 2.1.807
    
- task: UseDotNet@2
  displayName: install dotnet core 3.1
  inputs:
    version: 3.1.301
    
- task: CmdLine@2
  displayName: Run dotnet side by side.
  inputs:
    script: rsync -a ${DOTNET_ROOT/3.1.301/2.1.807}/* $DOTNET_ROOT/
    
- task: DotNetCoreCLI@1
  displayName: Integration Tests $(framework)
  continueOnError: true
  inputs:
    command: "test"
    projects: "NETCORE/test/**/IntegrationTests.Tests.csproj"
    arguments: "--configuration Release --framework $(framework) -l trx"

- task: DotNetCoreCLI@1
  displayName: Functional MVC Tests $(framework)
  continueOnError: true
  inputs:
    command: "test"
    projects: "NETCORE/test/**/*FunctionalTests.MVC.Tests.csproj"
    arguments: "--configuration Release --framework $(framework) -l trx"

- task: DotNetCoreCLI@1
  displayName: Unit Tests for AspNetCore $(framework)
  continueOnError: true
  inputs:
    command: "test"
    projects: "NETCORE/test/**/*AspNetCore.Tests.csproj"
    arguments: "--configuration Release --framework $(framework) -l trx"
    
- task: DotNetCoreCLI@1
  displayName: Unit Tests + Func Tests for WorkerService for AspNetCore $(framework)
  continueOnError: true
  inputs:
    command: "test"
    projects: "NETCORE/test/**/*WorkerService.Tests.csproj"
    arguments: "--configuration Release --framework $(framework) -l trx"

## Publish Test results

- task: PublishTestResults@2
  condition: always()
  inputs:
    testRunner: "VSTest"
    testResultsFiles: "**/*.trx"
    failTaskOnFailedTests: true

#- task: DotNetCoreCLI@1
#  displayName: Package Nuget
#  inputs:
#    command: "pack"
#    projects: "NETCORE/src/**/**.csproj"
#    arguments: "--configuration Release --include-symbols --output $(build.artifactstagingdirectory)"

#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: "$(build.artifactstagingdirectory)"
#    ArtifactName: "drop"
#    ArtifactType: "Container"
